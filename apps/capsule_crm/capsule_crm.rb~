module CapsuleCrm
  module EventHandler
    # Handle 'ticket.created' event
    def ticket_created
	  ticket = payload.ticket
	  requester = ticket.requester
	  http.basic_auth(settings.api_token, "")
          person = find_person(requester)
          if person
            puts "found" + person.firstName
          else
            if person = create_person(requester)
	      puts "Account for " + person.firstName + " was created" 
            end
          end
          if person
          # Create a note in highrise
             send_note(person)
      end
	  [200, "Ticket sent to Capsulecrm"]
    end
  end
end

module CapsuleCrm
  module ActionHandler
    def button
     # Handle Action here
     [200, "Success"]
    end
  end
end

module CapsuleCrm
  class Base < SupportBeeApp::Base
    string :api_token, :required => true, :label => 'Capsule Auth Token'
    string :account_name, :required => true, :label => 'Capsule Account Name'
    boolean :should_create_person, :default => true, :required => false, :label => 'Create a New Person'
	
    white_list :account_name, :should_create_person

    def find_person(requester)
       response = http_get('https://sample.capsulecrm.com/api/party') do |req|
       req.headers['Accept'] = 'application/json'
       end
       response.body['parties']==requester.name
    end

    def create_person(requester)
      return unless settings.should_create_person.to_s == '1'
      first_name, last_name = requester.name ? requester.name.split : [requester.email,'']
      http_post('https://supportbee.capsulecrm.com/api/person') do |req|
      req.headers['Accept'] = 'application/json'
      req.headers['Content-Type'] = 'application/json'
      req.body = {person:{firstName:'#{first_name}'}.to_json
      end
    end

    def send_note(person)
      location = person.headers['location']
      history_url = "#{location}/history"
      http_post(history_url) do |req|
      req.headers['Accept'] = 'application/json'
      req.headers['Content-Type'] = 'application/json'
      req.body = {historyItem:{note:'Hello from SupportBee!!!'}}.to_json
      end
    end
    
    def person_info_html(person)
      html = ""
      html << "<b> #{person.firstName} </b><br/>"
      html << "#{person.title} " if person.title
      html << "<br/>"
      html << person_link(person)
      html
    end

    def new_person_info_html(person)
      html = "Added <b> #{person.firstName} </b> to Capsule - "
      html << person_link(person)
      html
    end

    def person_link(person)
      "<a href='https://#{settings.subdomain}.capsulecrm.com/party/#{person.id}'>View #{person.first_name}'s profile on capsule</a>"
    end


  end
 end
